<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		title.veto="{'VETO Turn - ' + [currentTeam]}"
		title.choose="{'CHOOSING Turn - ' + [currentTeam]}"
		initialize="initializeHandler(event)"
		>
	
	<fx:Script>
		<![CDATA[
			import com.bbqcode.lanetscsgoveto.MapClickedEvent;
			import com.bbqcode.lanetscsgoveto.controls.itemrenderers.Map;
			import com.bbqcode.lanetscsgoveto.models.MapModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			private var currentStep:int;
			
			[Bindable]
			private var currentTeam:String = "teamA";
			
			private var teamStep:Array = ["teamA", "teamB", "teamA", "teamB", "teamA", "teamB"];
			private var actionStep:Array = ["veto", "veto", "veto", "veto", "choose", "choose"];
			
			public var teamA:String = "team A";
			public var teamB:String = "team B";
			private var currentAction:String;
			
			protected function initializeHandler(event:FlexEvent):void
			{
				setCurrentState("veto");
				var maps:ArrayCollection = new ArrayCollection(); 
				maps.addItem(new MapModel("de_inferno", "images/maps/inferno.png"));
				maps.addItem(new MapModel("de_overpass", "images/maps/overpass.png"));
				maps.addItem(new MapModel("de_dust2", "images/maps/dust2.png"));
				maps.addItem(new MapModel("de_cache", "images/maps/cache.png"));
				maps.addItem(new MapModel("de_nuke", "images/maps/nuke.png"));
				maps.addItem(new MapModel("de_mirage", "images/maps/mirage.png"));
				maps.addItem(new MapModel("de_season", "images/maps/season.png"));
				mapsList.dataProvider = maps;
				mapsList.addEventListener(MapClickedEvent.EVENTNAME, clickHandler);
				computeCurrentData();
			}
			
			private function computeCurrentData():void {
				currentTeam = teamStep[currentStep];
				currentAction = actionStep[currentStep];
				setCurrentState(currentAction);
			}
			
			protected function clickHandler(event:MapClickedEvent):void
			{
				var mapModel:MapModel = event.mapModel;
				if (currentAction && mapModel && !mapModel.isVetoed && !mapModel.isChoosen) {
					logData.dataProvider.addItem(StringUtil.substitute("{2}: {0} vetoed {1}", currentTeam, mapModel.mapName, currentStep + 1));
					
					if (currentAction == "veto") {
						mapModel.isVetoed = true;
					} else if (currentAction == "choose") {
						mapModel.isChoosen = true;
					}
					mapModel.choosenBy = currentTeam;
					currentStep++;
					computeCurrentData();
				}
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="veto"/>
		<s:State name="choose"/>
	</s:states>
	
	<s:VGroup width="100%" height="100%">
		<s:List 
			id="mapsList"
			width="100%" height="100%"
			itemRenderer="com.bbqcode.lanetscsgoveto.controls.itemrenderers.Map">
			<s:layout>
				<s:VerticalLayout />
			</s:layout>
			
		</s:List> 
		
		<s:List id="logData" height="220" width="100%" dataProvider="{new ArrayCollection()}" 
				itemRenderer="com.bbqcode.lanetscsgoveto.controls.itemrenderers.Log">
			
		</s:List>	
	</s:VGroup>
	
</s:View>
