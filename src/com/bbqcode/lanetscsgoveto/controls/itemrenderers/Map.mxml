<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					height="100" width="100%"
					click="clickHandler(event)"
					currentState="{computeState(model.isVetoed, model.isChoosen)}">
	
	<fx:Script>
		<![CDATA[
			import com.bbqcode.lanetscsgoveto.MapClickedEvent;
			import com.bbqcode.lanetscsgoveto.models.MapModel;
			
			[Bindable]
			private var model:MapModel;
			
			override public function get data():Object
			{
				return super.data;
			}
			
			override public function set data(value:Object):void
			{
				super.data = value;
				model = data as MapModel;
			}
			
			protected function clickHandler(event:MouseEvent):void
			{
				parent.dispatchEvent(new MapClickedEvent(model));
			}
			
			private function computeState(isVetoed:Boolean, isChoosen:Boolean):Object
			{
				if (isVetoed) return "vetoed";
				if (isChoosen) return "choosen";
				
				return "default";
			}
			
		]]>
	</fx:Script>
	
	<s:Rect alpha.stateChange="0.2" top="0" bottom="0" left="0" right="0">
		<s:fill>
			<s:SolidColor color="0x666666" color.choosen="0x2CF33A"/>
		</s:fill>
	</s:Rect>
	<!--<s:Label text="{model.mapName}" horizontalCenter="0" verticalCenter="0" />-->
	<s:Image alpha.stateChange="0.2" source="{model.imagePath}" width="100%" height="100%" />
	
	<s:Label left="20" top="5" text="{model.choosenBy}" fontSize="28" fontWeight="bold"/>
	<s:states>
		<s:State name="default" />
		<s:State name="stateChange" />
		<s:State name="vetoed" basedOn="stateChange"/>
		<s:State name="choosen" basedOn="stateChange"/>
	</s:states>
</s:ItemRenderer>
